name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Install Python
      run: |
        sudo apt update
        sudo apt install python3 python3-pip       

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install and Run linters <flake8>
      run: |
        pip install flake8
        flake8 . --count --show-source --statistics --exit-zero

    - name: Install and Run code formatter <black>
      run: |
        pip install black
        black .

    - name: Build project
      run: |
        python setup.py build
      
    - name: Run unit tests
      run: |
        pytest --junitxml=pytest_results.xml

    - name: Start Flask server
      run: python manage.py run &
        
    - name: Run acceptance tests
      run: python acceptance_tests.py

    - name: Store unit test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: pytest_results.xml   

    - name: Run security scanning (Bandit)
      run: |
        pip install bandit
        bandit -r . --exit-zero --format json -o bandit_report.json

    - name: Store Bandit report (security scan)
      uses: actions/upload-artifact@v2
      with:
        name: security_scanning_results
        path: bandit_report.json

    - name: Install Docker
      run: |
          sudo apt remove containerd
          sudo apt install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl restart docker

    - name: Build Docker image from existing Dockerfile
      run: |
          docker build -t flask-app .

    - name: Log into GitHub Packages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Tag Docker image with unique version
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
          docker tag flask-app ghcr.io/${{ github.repository_owner }}/flask-app:${{ github.sha }}

    - name: Push Docker image to GitHub Packages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: docker push ghcr.io/${{ github.repository_owner }}/flask-app:${{ github.sha }}

    - name: Tag Docker image as latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: docker tag ghcr.io/${{ github.repository_owner }}/flask-app:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/flask-app:latest

    - name: Push latest Docker image to GitHub Packages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: docker push ghcr.io/${{ github.repository_owner }}/flask-app:latest

    - name: Install Trivy
      run: |
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update && sudo apt-get install -y trivy

    - name: Vulnerability scanning with Trivy
      run: trivy image flask-app:latest
